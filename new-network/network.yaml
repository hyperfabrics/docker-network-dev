name: "commercialpaper-network"

#
# Any properties with an "x-" prefix will be treated as application-specific, exactly like how naming
# in HTTP headers or swagger properties work. The SDK will simply ignore these fields and leave
# them for the applications to process. This is a mechanism for different components of an application
# to exchange information that are not part of the standard schema described below. In particular,
# the "x-type" property with the "hlfv1" value example below is used by Hyperledger Composer to
# determine the type of Fabric networks (v0.6 vs. v1.0) it needs to work with.
#
x-type: "hlfv1"

#
# Describe what the target network is/does.
#
description: "The CommercialPaper network"

#
# Schema version of the content. Used by the SDK to apply the corresponding parsing rules.
#
version: "1.0"

#
# [Optional]. But most apps would have this section so that channel objects can be constructed
# based on the content below. If an app is creating channels, then it likely will not need this
# section.
#
channels:
  commercialpaperchannel:
    # Required. list of orderers designated by the application to use for transactions on this
    # channel. This list can be a result of access control ("org1" can only access "ordererA"), or
    # operational decisions to share loads from applications among the orderers.  The values must
    # be "names" of orgs defined under "organizations/peers"
    orderers:
      - orderer.hyperfabrics.com

    # Required. list of peers from participating orgs
    peers:
      peer0.papernet.hyperfabrics.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true
      
      peer1.papernet.hyperfabrics.com:
        endorsingPeer: false
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true
      
      peer2.papernet.hyperfabrics.com:
        endorsingPeer: false
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true


#
# list of participating organizations in this network
#
organizations:
  Papernet:
    mspid: PapernetMSP

    peers:
      - peer0.papernet.hyperfabrics.com
      - peer1.papernet.hyperfabrics.com
      - peer2.papernet.hyperfabrics.com

    # [Optional]. Certificate Authorities issue certificates for identification purposes in a Fabric based
    # network. Typically certificates provisioning is done in a separate process outside of the
    # runtime network. Fabric-CA is a special certificate authority that provides a REST APIs for
    # dynamic certificate management (enroll, revoke, re-enroll). The following section is only for
    # Fabric-CA servers.
    certificateAuthorities:
      - ca.papernet.hyperfabrics.com

#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:
  orderer.hyperfabrics.com:
    url: grpc://localhost:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer.hyperfabrics.com

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:
  peer0.papernet.hyperfabrics.com:
    # this URL is used to send endorsement and query requests
    url: grpc://localhost:7051
    grpcOptions:
      ssl-target-name-override: peer0.papernet.hyperfabrics.com
      request-timeout: 120001
  
  peer1.papernet.hyperfabrics.com:
    url: grpc://localhost:8051
    grpcOptions:
      ssl-target-name-override: peer1.papernet.hyperfabrics.com
      request-timeout: 120001
  
  peer2.papernet.hyperfabrics.com:
    url: grpc://localhost:9051
    grpcOptions:
      ssl-target-name-override: peer2.papernet.hyperfabrics.com
      request-timeout: 120001

# Fabric-CA is a special kind of Certificate Authority provided by Hyperledger Fabric which allows
# certificate management to be done via REST APIs. Application may choose to use a standard
# Certificate Authority instead of Fabric-CA, in which case this section would not be specified.
#
certificateAuthorities:
  ca.papernet.hyperfabrics.com:
    url: http://localhost:7054
    # the properties specified under this object are passed to the 'http' client verbatim when
    # making the request to the Fabric-CA server
    httpOptions:
      verify: false

    # Fabric-CA supports dynamic user enrollment via REST APIs. A "root" user, a.k.a registrar, is
    # needed to enroll and invoke new users.
    registrar:
      - enrollId: admin
        enrollSecret: adminpw
    # [Optional] The optional name of the CA.
    caName: ca.papernet.hyperfabrics.com